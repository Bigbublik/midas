version: "3.8"
services:
  database:
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: midas
    volumes:
      - "./db:/data/db"
      - "./etc/mongo/scripts:/docker-entrypoint-initdb.d"
  broker:
    image: nats-streaming:scratch
    restart: unless-stopped
  proxy:
    image: envoyproxy/envoy-alpine:v1.16-latest
    restart: unless-stopped
    command:
      - -c
      - /etc/midas/envoy.yaml
    volumes:
      - ./etc:/etc/midas
    environment:
      ENVOY_UID: 0
    depends_on:
      - symbol_service
      - historical_service
      - trade_observer_service
      - frontend
    ports:
      - 50000:50000
      - 50001:50001
  express:
    image: mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_SERVER: database
    ports:
      - 8081:8081
    depends_on:
      - database
  historical_service:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=historical_service
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    restart: unless-stopped
    depends_on:
      - database
      - broker
      - historical_fetch_worker
      - historical_record_worker
  symbol_service:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=symbol_service
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    restart: unless-stopped
    depends_on:
      - database
      - broker
      - binance_trade_observer_worker
  historical_fetch_worker:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=historical_fetch_worker
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    restart: unless-stopped
    depends_on:
      - database
      - broker
  historical_record_worker:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=historical_record_worker
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    restart: unless-stopped
    depends_on:
      - database
      - broker
  binance_trade_observer_worker:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=observer_worker
    command:
      - -c
      - /etc/midas/midas.yml
      - -e
      - binance
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    restart: unless-stopped
    depends_on:
      - database
      - broker
  trade_observer_service:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=observer_service
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    restart: unless-stopped
    depends_on:
      - broker
  frontend:
    build:
      context: frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/opt/code
      - /opt/code/node_modules
