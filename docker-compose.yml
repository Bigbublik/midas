version: "3.8"
services:
  database:
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: midas
    volumes:
      - "./db:/data/db"
      - "./etc/mongo/scripts:/docker-entrypoint-initdb.d"
  broker:
    image: nats-streaming:scratch
  proxy:
    image: nginx:alpine
    volumes:
      - ./etc/tls:/etc/tls:ro
      - ./etc/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - express
      - symbol_service
      - historical_service
      - trade_observer_service
      - keychain_service
      - frontend
    ports:
      - 50000:50000
  express:
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: database
      ME_CONFIG_SITE_BASEURL: /admin/
    depends_on:
      - database
  historical_service:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=historical_service
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    depends_on:
      - database
      - broker
      - historical_fetch_worker
      - historical_record_worker
  symbol_service:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=symbol_service
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    depends_on:
      - database
      - broker
      - binance_trade_observer_worker
  historical_fetch_worker:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=historical_fetch_worker
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    depends_on:
      - database
      - broker
  historical_fetch_aggregator:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=historical_aggregator
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    depends_on:
      - broker
  historical_record_worker:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=historical_record_worker
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    depends_on:
      - database
      - broker
  binance_trade_observer_worker:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=observer_worker
    command:
      - -c
      - /etc/midas/midas.yml
      - -e
      - binance
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    depends_on:
      - database
      - broker
  notify_worker:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=notify_worker
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    depends_on:
      - database
      - broker
  trade_observer_service:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=observer_service
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    depends_on:
      - broker
  token_service:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=token_service
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
  keychain_service:
    build:
      context: ./backend
      dockerfile: devel.dockerfile
      args:
        - SERVICE=keychain_service
    command:
      - -c
      - /etc/midas/midas.yml
    volumes:
      - ./etc:/etc/midas
      - ./backend:/opt/code
    depends_on:
      - database
  frontend:
    build:
      context: frontend
    volumes:
      - ./frontend:/opt/code
      - /opt/code/node_modules
