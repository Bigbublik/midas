version: 2.1

orbs:
  slack: circleci/slack@3.4.2
  docker: circleci/docker@1.4.0

executors:
  backend-rust:
    docker:
      - image: rust
    # working_directory: .
  docker-build:
    docker:
      - image: docker

jobs:
  build-backend:
    executor: backend-rust
    steps:
      - checkout
      - restore_cache:
          key: build-cache-{{ checksum "backend/Cargo.lock" }}
      - run:
          name: "Install musl tools"
          command: "apt-get update && apt-get install -y musl-tools"
      - run: rustup component add rustfmt
      - run:
          name: "Install musl package"
          command: "rustup target add x86_64-unknown-linux-musl"
      - run:
          name: "Extract openssl-musl package"
          command: "tar xJvf openssl-musl.txz && mv openssl-musl ~/"
          working_directory: ./.circleci
      - run:
          name: Build the package
          command: |
            export OPENSSL_DIR=${HOME}/openssl-musl/musl
            cargo build --target x86_64-unknown-linux-musl --release
          working_directory: ./backend
          environment:
            PKG_CONFIG_ALLOW_CROSS: '1'
            OPENSSL_STATIC: 'true'
      - save_cache:
          paths:
            - ./backend/target
            - ~/.rustup
          key: build-cache-{{ checksum "backend/Cargo.lock" }}
      - store_artifacts:
          path: ./backend/target/x86_64-unknown-linux-musl/release/historical
          destination: historical
      - slack/status
      - persist_to_workspace:
          root: .
          paths:
            - ./backend/target/x86_64-unknown-linux-musl/release/historical
            - ./backend/prod.dockerfile
  deploy-historical-image:
    executor: docker-build
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          version: 19.03.12
      - run:
          name: Log into docker.pkg.github.com
          command: >
            docker login https://docker.pkg.github.com
              -u ${GITHUB_USERNAME}
              -p ${GITHUB_TOKEN}
      # - run:
      #     name: Build Docker Image
      #     command: |
      #       docker build \
      #         -f prod.dockerfile \
      #         --build-arg SERVICE=historical \
      #         -t docker.pkg.github.com/hiroaki-yamamoto/midas/historical .
      #     working_directory: backend
      - docker/build:
          image: docker.pkg.github.com/hiroaki-yamamoto/midas/historical
          registry: docker.pkg.github.com
          path: backend
          docker-context: backend
          dockerfile: prod.dockerfile
          extra_build_args: --build-arg SERVICE=historical
      - docker/push:
          image: docker.pkg.github.com/hiroaki-yamamoto/midas/historical
          registry: docker.pkg.github.com

devel-filter: &devel-filter
  filters:
    branches:
      only: /.*/

workflows:
  version: 2
  build:
    jobs:
      - build-backend:
          <<: *devel-filter
      - deploy-historical-image:
          requires:
            - build-backend
          <<: *devel-filter
