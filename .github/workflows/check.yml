on:
  push:
    branches-ignore:
      - master
  pull_request:

jobs:
  check:
    name: "Check Backend"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ~/.cache/sccache
            backend/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('backend/Cargo.lock') }}
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            musl-tools jq curl lld clang cmake protobuf-compiler \
            libprotobuf-dev
      - name: Setup Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - name: Setup Rustfmt
        run: rustup component add rustfmt
      - name: Target to x86_64-unknown-linux-musl
        run: rustup target add x86_64-unknown-linux-musl
      # - name: "Install sccache"
      #   run: |
      #     TARGET="sccache-${{ vars.SCCACHE_VER }}-x86_64-unknown-linux-musl"
      #     SCCACHE_ARCHIVE="${TARGET}.tar.gz"
      #     SCCACHE_URL='https://github.com/mozilla/sccache/releases/download/'
      #     SCCACHE_URL="${SCCACHE_URL}${{ vars.SCCACHE_VER }}/${SCCACHE_ARCHIVE}"
      #     curl -fLC - ${SCCACHE_URL} -o ${SCCACHE_ARCHIVE}
      #     tar xzf ${SCCACHE_ARCHIVE}
      #     mv "${TARGET}/sccache" ${{ vars.RUSTC_WRAPPER }}
      #     rm -rf ${SCCACHE_ARCHIVE} ${TARGET}
      #     chmod u+x ${{ vars.RUSTC_WRAPPER }}
      - name: "Extract musl dependencies"
        run: |
          mkdir ../deps
          tar xJvf openssl.txz -C ../deps
          tar xJvf gmp.txz -C ../deps
          tar xJvf mpfr.txz -C ../deps
          tar xJvf mpc.txz -C ../deps
        working-directory: ./.github
      - name: "Build the package"
        run: |
          cargo check -r \
            --target x86_64-unknown-linux-musl
        # env:
        #   RUSTC_WRAPPER: ${{ vars.RUSTC_WRAPPER }}
        working-directory: ./backend
