name: "Build Backend"
on:
  push:
    branches:
      - '**'
jobs:
  build-libs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            musl-tools jq curl lld clang cmake protobuf-compiler \
            libprotobuf-dev
      - name: Setup Rust
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - name: Setup Rustfmt
        run: rustup component add rustfmt
      - name: Target to x86_64-unknown-linux-musl
        run: rustup target add x86_64-unknown-linux-musl
      - name: "Extract musl dependencies"
        run: |
          mkdir ../deps
          tar xJvf openssl.txz -C ../deps
          tar xJvf gmp.txz -C ../deps
          tar xJvf mpfr.txz -C ../deps
          tar xJvf mpc.txz -C ../deps
        working-directory: ./.circleci
      - name: "Build the package"
        run: |
          cargo build -r \
            --target x86_64-unknown-linux-musl \
            --lib
          cargo build -r \
            --target x86_64-unknown-linux-musl \
            -p clients
          cargo build -r \
            --target x86_64-unknown-linux-musl \
            -p executors
          cargo build -r \
            --target x86_64-unknown-linux-musl \
            -p history
          cargo build -r \
            --target x86_64-unknown-linux-musl \
            -p notification
          cargo build -r \
            --target x86_64-unknown-linux-musl \
            -p observers
          # cargo build -r \
          #   --target x86_64-unknown-linux-musl \
          #   -p sign
          cargo build -r \
            --target x86_64-unknown-linux-musl \
            -p symbols
        working-directory: ./backend
      - name: "Upload the package"
        uses: actions/upload-artifact@v2
        with:
          name: libs
          path: backend/target
