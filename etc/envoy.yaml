admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 50001 }

static_resources:
  listeners:
    - name: server
      address:
        socket_address: { address: '::', port_value: 50000, ipv4_compat: true }
      filter_chains:
        filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": "type.googleapis.com/envoy.extensions\
                .filters.network.http_connection_manager\
                .v3.HttpConnectionManager"
              codec_type: auto
              stat_prefix: ingress_http
              upgrade_configs:
                - upgrade_type: websocket
              access_log:
                - name: envoy.access_loggers.file
                  typed_config:
                    '@type': "type.googleapis.com/envoy.extensions\
                      .access_loggers.file.v3.FileAccessLog"
                    path: /dev/stdout
                - name: envoy.access_loggers.http_grpc
                  typed_config:
                    '@type': "type.googleapis.com/envoy.extensions\
                      .access_loggers.grpc.v3.HttpGrpcAccessLogConfig"
                    common_config:
                      log_name: historical
                      grpc_service:
                        envoy_grpc:
                          cluster_name: historical
                - name: envoy.access_loggers.http_grpc
                  typed_config:
                    '@type': "type.googleapis.com/envoy.extensions\
                      .access_loggers.grpc.v3.HttpGrpcAccessLogConfig"
                    common_config:
                      log_name: symbol
                      grpc_service:
                        envoy_grpc:
                          cluster_name: symbol
              route_config:
                name: route_cfg
                virtual_hosts:
                  - name: route
                    domains: ["*"]
                    routes:
                      - match: { prefix: "/historical/stream/" }
                        route:
                          cluster: historical_stream
                          prefix_rewrite: "/"
                      - match: { prefix: "/historical/" }
                        route:
                          cluster: historical
                          prefix_rewrite: "/"
                      - match: { prefix: "/symbol/" }
                        route:
                          cluster: symbol
                          prefix_rewrite: "/"
                      - match: { prefix: "/bookticker/" }
                        route:
                          cluster: trade_observer
                          prefix_rewrite: "/"
                      - match: { prefix: "/" }
                        route: { cluster: frontend }
              http_filters:
                - name: envoy.filters.http.grpc_web
                - name: envoy.filters.http.router
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            '@type': "type.googleapis.com/envoy.extensions\
              .transport_sockets.tls.v3.DownstreamTlsContext"
            common_tls_context:
              tls_certificates:
                - certificate_chain: { filename: /etc/midas/tls/browser/localhost.crt }
                  private_key: { filename: /etc/midas/tls/browser/localhost.key }
              validation_context:
                trusted_ca: { filename: /etc/midas/tls/browser/root-ca.pem }
              alpn_protocols:
                - h2,http/1.1
  clusters:
    - name: historical_stream
      connect_timeout: 10s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: historical_stream
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: historical_service
                      port_value: 50001
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          '@type': "type.googleapis.com/\
            envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext"
          common_tls_context:
            tls_certificates:
              certificate_chain: { filename: /etc/midas/tls/svc/devel.crt }
              private_key: { filename: /etc/midas/tls/svc/devel.key }
            validation_context:
              trusted_ca: { filename: /etc/midas/tls/svc/root-ca.pem }
    - name: historical
      connect_timeout: 10s
      type: logical_dns
      http2_protocol_options:
        allow_connect: true
      lb_policy: round_robin
      load_assignment:
        cluster_name: historical
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: historical_service
                      port_value: 50000
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          '@type': "type.googleapis.com/\
            envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext"
          common_tls_context:
            tls_certificates:
              certificate_chain: { filename: /etc/midas/tls/svc/devel.crt }
              private_key: { filename: /etc/midas/tls/svc/devel.key }
            validation_context:
              trusted_ca: { filename: /etc/midas/tls/svc/root-ca.pem }
    - name: symbol
      connect_timeout: 10s
      type: logical_dns
      http2_protocol_options:
        allow_connect: true
      lb_policy: round_robin
      load_assignment:
        cluster_name: symbol
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: symbol_service
                      port_value: 50000
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          '@type': "type.googleapis.com/\
            envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext"
          common_tls_context:
            tls_certificates:
              - certificate_chain: { filename: /etc/midas/tls/svc/devel.crt }
                private_key: { filename: /etc/midas/tls/svc/devel.key }
            validation_context:
              trusted_ca: { filename: /etc/midas/tls/svc/root-ca.pem }
    - name: trade_observer
      connect_timeout: 10s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: trade_observer
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: trade_observer_service
                      port_value: 50000
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          '@type': "type.googleapis.com/\
            envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext"
          common_tls_context:
            tls_certificates:
              - certificate_chain: { filename: /etc/midas/tls/svc/devel.crt }
                private_key: { filename: /etc/midas/tls/svc/devel.key }
            validation_context:
              trusted_ca: { filename: /etc/midas/tls/svc/root-ca.pem }
    - name: frontend
      connect_timeout: 10s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: frontend
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: frontend
                      port_value: 50000
